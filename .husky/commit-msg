# Get the commit message
commit_msg=$(cat "$1")

BRANCH=$(git rev-parse --abbrev-ref HEAD)
REGEX="^(setup|feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([a-zA-Z0-9-]+\))?: .+"

# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Function to print colored text
print_color() {
  printf "${1}%s${NC}\n" "$2"
}

print_color $GREEN "Branch name: $BRANCH"
print_color $GREEN "Commit message: $commit_msg"

# Check if the branch name matches the required pattern
if ! echo "$commit_msg" | grep -qE "$REGEX"; then
  print_color $RED "Your commit was rejected due to incorrect commit message format"
  print_color $RED "Please use the format: <type>[optional scope]: <description>"
  print_color $RED "Allowed types: setup, feat, fix, test, refactor, perf, docs, style, build, ci, chore, revert"
  exit 1
fi

# If you want to exclude certain branches from this check, you can add a condition here
# For example:
# if [ "$BRANCH" != "main" ] && [ "$BRANCH" != "develop" ]; then
#   # Apply the regex check here
# fi

npx --no -- commitlint --edit $1
